(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)})([function(module,exports,__webpack_require__){"use strict";__webpack_require__(1);__webpack_require__(2);__webpack_require__(20)},function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"index.html"},function(module,exports,__webpack_require__){"use strict";const io=__webpack_require__(3);const Game_1=__webpack_require__(4);const Player_1=__webpack_require__(17);const Hall_1=__webpack_require__(18);const Room_1=__webpack_require__(19);const Const_1=__webpack_require__(16);let socket=io("http://123.57.13.28:8002");let hall;let player;let room;let game;let containerPlayer=document.getElementById("player");let containerWelcome=document.getElementById("welcome");let containerCountdown=document.getElementById("countdown");function connect(){hall=new Hall_1.default(socket);player=new Player_1.default(socket);room=new Room_1.default(socket);game=new Game_1.default(socket,player.id);enterHall();socket.on(Const_1.EVENT_JOIN_ROOM,data=>{data=JSON.parse(data);room.setName(data["room"]);hideAllContainer();room.show()});socket.on(Const_1.EVENT_LEAVE_ROOM,data=>{hideAllContainer();hall.enter()});socket.on(Const_1.EVENT_ENTER_GAME,data=>{data=JSON.parse(data);hideAllContainer();game.prepare(data);containerCountdown.style.display="block"});socket.on(Const_1.EVENT_GAME_OVER,data=>{game.over();hideAllContainer();room.show()});socket.on("TEST",data=>{console.log(data)})}function enterHall(){containerWelcome.style.display="none";if(!player.name){containerPlayer.style.display="block"}else{hall.enter()}handleSetName()}function handleSetName(){let inputName=document.getElementById("input-name");let formName=document.getElementById("form-name");formName.addEventListener("submit",evt=>{evt.preventDefault();if(!inputName.value){alert("请输入昵称！");return}player.setName(inputName.value);containerPlayer.style.display="none";hall.enter()})}function hideAllContainer(){Array.from(document.querySelectorAll(".container")).forEach(element=>{element.style.display="none"})}socket.on("connect",connect);socket.on("disconnect",()=>{console.log("disconnect")})},function(module,exports){module.exports=io},function(module,exports,__webpack_require__){"use strict";const THREE=__webpack_require__(5);const Ammo=__webpack_require__(6);const Resource_1=__webpack_require__(7);const World_1=__webpack_require__(8);const Map_1=__webpack_require__(9);const Vehicle_1=__webpack_require__(15);const Const_1=__webpack_require__(16);let clientSocket;let world;let vehicle;let keysActions={KeyW:"acceleration",KeyS:"braking",KeyA:"left",KeyD:"right"};let colors=[10027008,10066176,39168,39321,153];let animateFrame;class Game{constructor(socket,playerId){this.socket=clientSocket=socket;this._playerId=playerId;this._players=[];this._vehicles={};this.state=Game.STATE_IDLE;this.container=document.getElementById("game");this.containerCountdown=document.getElementById("countdown");this.containerRankList=document.getElementById("rank-list");this._attachEvent();this._attachDataListener()}_addVehicles(){let quat;let players=this._players;this._map.startLine.getWorldPosition();quat=new THREE.Quaternion(0,0,0,1);quat.setFromEuler(this._map.startLine.rotation);for(let i=0,len=players.length;i<len;i++){let x=Math.pow(-1,i)*Math.ceil(i/2)*4;let vehicle=new Vehicle_1.default(world,this._map.startLine.localToWorld(new THREE.Vector3(x,1,-5)),quat,colors[i],players[i]["name"]);this._vehicles[players[i]["id"]]=vehicle;if(players[i]["id"]===this._playerId){this._vehicle=vehicle}}vehicle=this._vehicle}_destinationTest(dt){let callback=new Ammo.ConcreteContactResultCallback;let game=this;callback.addSingleResult=function(){if(game.state===Game.STATE_PLAYING){game._finish()}};world.physicsWorld.contactPairTest(this._vehicle.classisBody,this._map.finishLine,callback)}_finish(){this.state=Game.STATE_FINISH;this.socket.emit(Const_1.EVENT_FINISH_GAME,JSON.stringify({player:this._playerId}));this.containerRankList.style.display="block";this._vehicle.break()}_handleKeyUp(evt){if(this.state===Game.STATE_PLAYING&&keysActions[evt.code]){evt.preventDefault();evt.stopPropagation();this.socket.emit(Const_1.EVENT_PLAYER_ACTION,JSON.stringify({action:keysActions[evt.code],value:0}));return false}}_handleKeyDown(evt){if(this.state===Game.STATE_PLAYING&&keysActions[evt.code]){evt.preventDefault();evt.stopPropagation();this.socket.emit(Const_1.EVENT_PLAYER_ACTION,JSON.stringify({action:keysActions[evt.code],value:1}));return false}}_handleWindowResize(evt){if(this.state!==Game.STATE_IDLE&&world){world.resize(window.innerWidth,window.innerHeight)}}_attachEvent(){window.addEventListener("keydown",evt=>{this._handleKeyDown(evt)});window.addEventListener("keyup",evt=>{this._handleKeyUp(evt)});window.addEventListener("resize",evt=>{this._handleWindowResize(evt)})}_attachDataListener(){this.socket.on(Const_1.EVENT_COUNTDOWN,data=>{this._countdown(data)});this.socket.on(Const_1.EVENT_START_GAME,data=>{this._startGame(data)});this.socket.on(Const_1.EVENT_PLAYER_ACTION,data=>{this._translateVehicle(data)});this.socket.on(Const_1.EVENT_FINISH_GAME,data=>{this._updateRankList(data)})}_countdown(data){data=JSON.parse(data);this.containerCountdown.innerHTML=data["count"]}_prepareGame(){this.state=Game.STATE_COUNTDOWN;this.container.style.display="block";world=new World_1.default(window.innerWidth,window.innerHeight);this.container.appendChild(world.domElement);this._map=new Map_1.default(world,Resource_1.default.maps["test"]);this._addVehicles();world.syncList.push(this._destinationTest.bind(this));animate()}_startGame(data){data=JSON.parse(data);this.state=Game.STATE_PLAYING;this.containerCountdown.innerHTML="START";setTimeout(()=>{this.containerCountdown.style.display="none";this.containerCountdown.innerHTML=""},1e3)}_translateVehicle(data){data=JSON.parse(data);this._vehicles[data["player"]].actions[data["action"]]=!!data["value"]}_updateRankList(data){data=JSON.parse(data);let element=document.createElement("li");for(let i=0,len=this._players.length;i<len;i++){if(this._players[i]["id"]===data["player"]){element.innerHTML=this._players[i]["name"]}}this.containerRankList.querySelector("ol").appendChild(element)}prepare(players){this._players=players;Resource_1.default.load().then(()=>{this._prepareGame()})}over(){this.state=Game.STATE_IDLE;this.containerRankList.style.display="none";this.containerRankList.querySelector("ol").innerHTML="";this.container.innerHTML="";this._vehicle=null;this._vehicles.lenght=0;world=null;cancelAnimationFrame(animateFrame)}}Game.STATE_IDLE=1;Game.STATE_COUNTDOWN=2;Game.STATE_PLAYING=3;Game.STATE_FINISH=4;Object.defineProperty(exports,"__esModule",{value:true});exports.default=Game;function animate(){animateFrame=requestAnimationFrame(animate);let dt=world.clock.getDelta();for(let i=0;i<world.syncList.length;i++){world.syncList[i](dt)}world.physicsWorld.stepSimulation(dt,10);world.controls.update();world.renderer.render(world.scene,world.camera);world.time+=dt;resetCamera()}function resetCamera(){let vehiclePosition=vehicle.classisBody.mesh.position;let cameraPosition=vehicle.classisBody.mesh.localToWorld(new THREE.Vector3(0,2.5,-5));world.camera.position.x=cameraPosition.x;world.camera.position.z=cameraPosition.z;world.controls.target.x=vehiclePosition.x;world.controls.target.z=vehiclePosition.z}},function(module,exports){module.exports=THREE},function(module,exports){module.exports=Ammo},function(module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value)}).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments)).next())})};class Resource{counstructor(){}static load(){return __awaiter(this,void 0,void 0,function*(){for(let key in Resource.meshResource){Resource.meshes[key]=yield new Promise((resolve,reject)=>{Resource._loadMeshResource(`./resources/meshes/${Resource.meshResource[key][0]}`,`./resources/meshes/${Resource.meshResource[key][1]}`).then(mesh=>{resolve(mesh)})})}for(let i=0,len=Resource.mapResource.length;i<len;i++){Resource.maps[Resource.mapResource[i]]=yield new Promise((resolve,reject)=>{Resource._loadMapResource(`./resources/maps/${Resource.mapResource[i]}.json`).then(data=>{resolve(data)})})}})}static _loadMeshResource(mtlURL,objURL){return __awaiter(this,void 0,void 0,function*(){let mtlloader=new THREE.MTLLoader;let objloader=new THREE.OBJLoader;let material;let mesh;material=yield new Promise((resolve,reject)=>{mtlloader.load(mtlURL,material=>{resolve(material)})});material.preload();objloader.setMaterials(material);mesh=yield new Promise((resolve,reject)=>{objloader.load(objURL,mesh=>{resolve(mesh)})});return mesh})}static _loadMapResource(url){return __awaiter(this,void 0,void 0,function*(){let loader=new THREE.FileLoader;let mapData;loader.setResponseType("json");mapData=yield new Promise((resolve,reject)=>{loader.load(url,data=>{resolve(data)})});return mapData})}}Resource.meshes={};Resource.maps={};Resource.meshResource={tree:["tree.mtl","tree.obj"],vehicleBody:["vehiclebody.mtl","vehiclebody.obj"]};Resource.mapResource=["test"];Object.defineProperty(exports,"__esModule",{value:true});exports.default=Resource},function(module,exports){"use strict";class World{constructor(width,height){this.scene=_createScene();this.camera=_createCamera(width,height);this.renderer=_createRenderer(width,height);this.physicsWorld=_createPhysicsWorld();this.clock=new THREE.Clock;this.time=0;this.domElement=this.renderer.domElement;this.controls=new THREE.OrbitControls(this.camera);this.controls.enableZoom=false;this.controls.enableRotate=false;this.syncList=[]}resize(width,height){this.camera.aspect=width/height;this.camera.updateProjectionMatrix();this.renderer.setSize(width,height)}}World.ZERO_QUATERNION=new THREE.Quaternion(0,0,0,1);World.DEFAULT_COLOR=10066329;Object.defineProperty(exports,"__esModule",{value:true});exports.default=World;function _createScene(){let ambientLight=new THREE.AmbientLight(4210752);let dirLight=new THREE.DirectionalLight(16777215,1);let scene=new THREE.Scene;dirLight.position.set(10,10,5);scene.add(dirLight);scene.add(ambientLight);return scene}function _createCamera(width,height){let camera=new THREE.PerspectiveCamera(60,width/height,.2,2e3);camera.position.x=0;camera.position.y=2.5;camera.position.z=-5;return camera}function _createRenderer(width,height){let renderer=new THREE.WebGLRenderer;renderer.setClearColor(12571109);renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(width,height);renderer.setSize(width,height);return renderer}function _createPhysicsWorld(){let collisionConfiguration=new Ammo.btDefaultCollisionConfiguration;let dispatcher=new Ammo.btCollisionDispatcher(collisionConfiguration);let broadphase=new Ammo.btDbvtBroadphase;let solver=new Ammo.btSequentialImpulseConstraintSolver;let physicsWorld=new Ammo.btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);physicsWorld.setGravity(new Ammo.btVector3(0,-9.82,0));return physicsWorld}},function(module,exports,__webpack_require__){"use strict";const Ground_1=__webpack_require__(10);const Wall_1=__webpack_require__(13);const Tree_1=__webpack_require__(14);const Box_1=__webpack_require__(11);class Map{constructor(world,mapData){this.world=world;this.width=mapData["size"][0];this.depth=mapData["size"][2];new Ground_1.default(world,this.width,this.width);this._addInvisibleBarriers();this._addStartingLine(mapData["start"]["position"],mapData["start"]["rotation"]);this._addFinishLine(mapData["finish"]["position"],mapData["finish"]["rotation"]);this._addBodies(mapData["bodies"])}_addInvisibleBarriers(){this._addInvisibleBarrier(new THREE.Vector3(0,0,-this.depth/2),new THREE.Quaternion(0,0,0,1),this.width);this._addInvisibleBarrier(new THREE.Vector3(0,0,this.depth/2),new THREE.Quaternion(0,0,0,1),this.width);this._addInvisibleBarrier(new THREE.Vector3(-this.width/2,0,0),new THREE.Quaternion(0,0,0,1).setFromAxisAngle(new THREE.Vector3(0,1,0),Math.PI/2),this.depth);this._addInvisibleBarrier(new THREE.Vector3(this.width/2,0,0),new THREE.Quaternion(0,0,0,1).setFromAxisAngle(new THREE.Vector3(0,1,0),Math.PI/2),this.depth)}_addInvisibleBarrier(pos,quat,length){const HEIGHT=100;let transform=new Ammo.btTransform;let motionState;let localInertia;let rbInfo;let geometry=new Ammo.btBoxShape(new Ammo.btVector3(length,HEIGHT,.2));let rigidBody;transform.setIdentity();transform.setOrigin(new Ammo.btVector3(pos.x,pos.y,pos.z));transform.setRotation(new Ammo.btQuaternion(quat.x,quat.y,quat.z,quat.w));motionState=new Ammo.btDefaultMotionState(transform);localInertia=new Ammo.btVector3(0,0,0);geometry.calculateLocalInertia(0,localInertia);rbInfo=new Ammo.btRigidBodyConstructionInfo(0,motionState,geometry,localInertia);rigidBody=new Ammo.btRigidBody(rbInfo);this.world.physicsWorld.addRigidBody(rigidBody)}_addStartingLine(position,rotation){let pos=new THREE.Vector3(position[0],position[1],position[2]);let quat=new THREE.Quaternion(0,0,0,1).setFromAxisAngle(new THREE.Vector3(0,1,0),rotation*Math.PI/180);let shape=new THREE.BoxGeometry(20,.01,.5);let material=new THREE.MeshPhongMaterial({color:16777215});let mesh=new THREE.Mesh(shape,material);mesh.position.copy(pos);mesh.quaternion.copy(quat);this.world.scene.add(mesh);this.startLine=mesh}_addFinishLine(position,rotation){let pos=new THREE.Vector3(position[0],position[1],position[2]);let quat=new THREE.Quaternion(0,0,0,1).setFromAxisAngle(new THREE.Vector3(0,1,0),rotation*Math.PI/180);this.finishLine=new Box_1.default(this.world,pos,quat,20,.01,.5,0,1,new THREE.MeshPhongMaterial(16777215))}_addBodies(bodies){for(let key in bodies){switch(key){case"wall":bodies[key].forEach(data=>{let pos=new THREE.Vector3(data["position"][0],data["position"][1],data["position"][2]);let quat=new THREE.Quaternion(0,0,0,1);quat.setFromAxisAngle(new THREE.Vector3(0,1,0),data["rotation"]*Math.PI/180);new Wall_1.default(this.world,pos,quat,data["length"])});break;case"tree":bodies[key].forEach(data=>{let pos=new THREE.Vector3(data["position"][0],data["position"][1],data["position"][2]);let quat=new THREE.Quaternion(0,0,0,1);quat.setFromAxisAngle(new THREE.Vector3(0,1,0),data["rotation"]*Math.PI/180);new Tree_1.default(this.world,pos,quat)});break;case"box":bodies[key].forEach(data=>{let pos=new THREE.Vector3(data["position"][0],data["position"][1],data["position"][2]);let quat=new THREE.Quaternion(0,0,0,1);quat.setFromAxisAngle(new THREE.Vector3(0,1,0),data["rotation"]*Math.PI/180);new Box_1.default(this.world,pos,quat,1,1,1,100,1,new THREE.MeshPhongMaterial(10027161))});break;default:}}}_showInvisbileBarrier(pos,quat,material=new THREE.MeshPhongMaterial({color:39168})){let shape=new THREE.BoxGeometry(this.width,2,.2);let mesh=new THREE.Mesh(shape,material);mesh.position.copy(pos);mesh.quaternion.copy(quat);this.world.scene.add(mesh)}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Map},function(module,exports,__webpack_require__){"use strict";const Box_1=__webpack_require__(11);const World_1=__webpack_require__(8);class Ground extends Box_1.default{constructor(world,width,depth,friction=2,material=new THREE.MeshPhongMaterial({color:Box_1.default.DEFAULT_COLOR})){let pos=new THREE.Vector3(0,-.5,0);let quat=World_1.default.ZERO_QUATERNION;let height=1;let mass=0;super(world,pos,quat,width,height,depth,mass,friction,material)}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Ground},function(module,exports,__webpack_require__){"use strict";const RigidBody_1=__webpack_require__(12);class Box extends RigidBody_1.default{constructor(world,pos,quat,width,height,depth,mass=0,friction=1,material=new THREE.MeshPhongMaterial({color:RigidBody_1.default.DEFAULT_COLOR})){let geometry=new Ammo.btBoxShape(new Ammo.btVector3(width*.5,height*.5,depth*.5));let mesh;mesh=Box._createMesh(pos,quat,width,height,depth,material);super(world,mesh,geometry,pos,quat,mass,friction)}static _createMesh(pos,quat,width,height,depth,material){let shape=new THREE.BoxGeometry(width,height,depth);let mesh=new THREE.Mesh(shape,material);mesh.position.copy(pos);mesh.quaternion.copy(quat);return mesh}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Box},function(module,exports){"use strict";class RigidBody extends Ammo.btRigidBody{constructor(world,mesh,geometry,pos,quat,mass=0,friction=1){let transform;let motionState;let localInertia;let rbInfo;let sync;transform=RigidBody._createTransform(pos,quat);motionState=new Ammo.btDefaultMotionState(transform);localInertia=new Ammo.btVector3(0,0,0);geometry.calculateLocalInertia(mass,localInertia);rbInfo=new Ammo.btRigidBodyConstructionInfo(mass,motionState,geometry,localInertia);super(rbInfo);this.setFriction(friction);this.mesh=mesh;this.world=world;if(mass>0){this.setActivationState(RigidBody.DISABLE_DEACTIVATION);world.syncList.push(this._sync.bind(this))}this.world.physicsWorld.addRigidBody(this);this.world.scene.add(this.mesh)}_sync(){let ms=this.getMotionState();if(ms){ms.getWorldTransform(RigidBody.TRANSFORM_AUX);let p=RigidBody.TRANSFORM_AUX.getOrigin();let q=RigidBody.TRANSFORM_AUX.getRotation();if(this.mesh){this.mesh.position.set(p.x(),p.y(),p.z());this.mesh.quaternion.set(q.x(),q.y(),q.z(),q.w())}}}static _createTransform(pos,quat){let transform=new Ammo.btTransform;transform.setIdentity();transform.setOrigin(new Ammo.btVector3(pos.x,pos.y,pos.z));transform.setRotation(new Ammo.btQuaternion(quat.x,quat.y,quat.z,quat.w));return transform}}RigidBody.DEFAULT_COLOR=10066329;RigidBody.DISABLE_DEACTIVATION=4;RigidBody.TRANSFORM_AUX=new Ammo.btTransform;Object.defineProperty(exports,"__esModule",{value:true});exports.default=RigidBody},function(module,exports,__webpack_require__){"use strict";const Box_1=__webpack_require__(11);class Wall extends Box_1.default{constructor(world,pos,quat,length,material=new THREE.MeshPhongMaterial({color:39168})){let mass=0;let friction=1;let height=3;let depth=.2;super(world,pos,quat,length,height,depth,mass,friction,material)}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Wall},function(module,exports,__webpack_require__){"use strict";const Ammo=__webpack_require__(6);const Resource_1=__webpack_require__(7);const RigidBody_1=__webpack_require__(12);class Tree extends RigidBody_1.default{constructor(world,pos,quat){let radius=5;let height=10;let mass=0;let friction=1;let geometry=new Ammo.btCylinderShape(new Ammo.btVector3(radius,height,0));let mesh=Resource_1.default.meshes["tree"].clone();mesh.position.set(pos.x,pos.y,pos.z);super(world,mesh,geometry,pos,quat,mass,friction);this.mesh=mesh}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Tree},function(module,exports,__webpack_require__){"use strict";const RigidBody_1=__webpack_require__(12);const Resource_1=__webpack_require__(7);let DEFAULT_COLOR=10027008;class Vehicle extends Ammo.btRaycastVehicle{constructor(world,pos,quat,color,name){let tuning=new Ammo.btVehicleTuning;let rayCaster=new Ammo.btDefaultVehicleRaycaster(world.physicsWorld);let classisBody=Vehicle._createClassisBody(world,pos,quat);super(tuning,classisBody,rayCaster);this.setCoordinateSystem(0,1,2);this.world=world;this.tuning=tuning;this.classisBody=classisBody;this.color=color;this.name=name;world.physicsWorld.addAction(this);this._initConstants();this._initWheels();this.actions={acceleration:false,braking:false,left:false,right:false};world.syncList.push(this._sync.bind(this))}break(){this.actions.left=false;this.actions.right=false;this.actions.acceleration=false;this.actions.breaking=false;this.setBrake(this.maxBreakingForce,this.FRONT_LEFT);this.setBrake(this.maxBreakingForce,this.FRONT_RIGHT);this.setBrake(this.maxBreakingForce,this.BACK_LEFT);this.setBrake(this.maxBreakingForce,this.BACK_RIGHT)}_initConstants(){this.engineForce=0;this.vehicleSteering=0;this.breakingForce=0;this.wheelAxisPositionBack=-1;this.wheelRadiusBack=.4;this.wheelWidthBack=.3;this.wheelHalfTrackBack=1;this.wheelAxisHeightBack=.3;this.wheelAxisFrontPosition=1.7;this.wheelHalfTrackFront=1;this.wheelAxisHeightFront=.3;this.wheelRadiusFront=.35;this.wheelWidthFront=.2;this.friction=1e3;this.suspensionStiffness=20;this.suspensionDamping=2.3;this.suspensionCompression=4.4;this.suspensionRestLength=.6;this.rollInfluence=.2;this.steeringIncrement=.04;this.steeringClamp=.5;this.maxEngineForce=4e3;this.maxBreakingForce=100}_initWheels(){this.FRONT_LEFT=0;this.FRONT_RIGHT=1;this.BACK_LEFT=2;this.BACK_RIGHT=3;this.wheelMeshes=[];this.wheelDirectionCS0=new Ammo.btVector3(0,-1,0);this.wheelAxleCS=new Ammo.btVector3(-1,0,0);this._addWheel(new Ammo.btVector3(this.wheelHalfTrackFront,this.wheelAxisHeightFront,this.wheelAxisFrontPosition),this.wheelRadiusFront,this.wheelWidthFront,true,this.FRONT_LEFT);this._addWheel(new Ammo.btVector3(-this.wheelHalfTrackFront,this.wheelAxisHeightFront,this.wheelAxisFrontPosition),this.wheelRadiusFront,this.wheelWidthFront,true,this.FRONT_RIGHT);this._addWheel(new Ammo.btVector3(-this.wheelHalfTrackBack,this.wheelAxisHeightBack,this.wheelAxisPositionBack),this.wheelRadiusBack,this.wheelWidthBack,false,this.BACK_LEFT);this._addWheel(new Ammo.btVector3(this.wheelHalfTrackBack,this.wheelAxisHeightBack,this.wheelAxisPositionBack),this.wheelRadiusBack,this.wheelWidthBack,false,this.BACK_RIGHT)}static _createClassisBody(world,pos,quat){let width=1.8;let height=.6;let depth=4;let friction=1;let mass=800;let mesh=Resource_1.default.meshes["vehicleBody"].clone();let geometry=new Ammo.btBoxShape(new Ammo.btVector3(width*.5,height*.5,depth*.5));let classisBody;classisBody=new RigidBody_1.default(world,mesh,geometry,pos,quat,mass,friction);mesh.position.set(pos.x,pos.y,pos.z);classisBody.mesh=mesh;return classisBody}static _createWheelMesh(world,radius,width,material){let t=new THREE.CylinderGeometry(radius,radius,width,24,1);t.rotateZ(Math.PI/2);let mesh=new THREE.Mesh(t,material);mesh.add(new THREE.Mesh(new THREE.BoxGeometry(width*1.5,radius*1.75,radius*.25,1,1,1),material));world.scene.add(mesh);return mesh}_addWheel(pos,radius,width,isFront,index){let wheelInfo=super.addWheel(pos,this.wheelDirectionCS0,this.wheelAxleCS,this.suspensionRestLength,radius,this.tuning,isFront);wheelInfo.m_suspensionStiffness=this.suspensionStiffness;wheelInfo.m_wheelsDampingRelaxation=this.suspensionDamping;wheelInfo.m_wheelsDampingCompression=this.suspensionCompression;wheelInfo.m_frictionSlip=this.friction;wheelInfo.m_rollInfluence=this.rollInfluence;this.wheelMeshes[index]=Vehicle._createWheelMesh(this.world,radius,width,new THREE.MeshPhongMaterial({color:this.color}));return wheelInfo}_sync(dt){let speed=this.getCurrentSpeedKmHour();this.breakingForce=0;this.engineForce=0;if(this.actions.acceleration){if(speed<-1){this.breakingForce=this.maxBreakingForce}else{this.engineForce=this.maxEngineForce}}if(this.actions.braking){if(speed>1){this.breakingForce=this.maxBreakingForce}else{this.engineForce=-this.maxEngineForce/2}}if(this.actions.left){if(this.vehicleSteering<this.steeringClamp){this.vehicleSteering+=this.steeringIncrement}}else{if(this.actions.right){if(this.vehicleSteering>-this.steeringClamp)this.vehicleSteering-=this.steeringIncrement}else{if(this.vehicleSteering<-this.steeringIncrement){this.vehicleSteering+=this.steeringIncrement}else{if(this.vehicleSteering>this.steeringIncrement){this.vehicleSteering-=this.steeringIncrement}else{this.vehicleSteering=0}}}}this.applyEngineForce(this.engineForce,this.BACK_LEFT);this.applyEngineForce(this.engineForce,this.BACK_RIGHT);this.setBrake(this.breakingForce/2,this.FRONT_LEFT);this.setBrake(this.breakingForce/2,this.FRONT_RIGHT);this.setBrake(this.breakingForce,this.BACK_LEFT);this.setBrake(this.breakingForce,this.BACK_RIGHT);this.setSteeringValue(this.vehicleSteering,this.FRONT_LEFT);this.setSteeringValue(this.vehicleSteering,this.FRONT_RIGHT);let tm,p,q,i;let n=this.getNumWheels();for(i=0;i<n;i++){this.updateWheelTransform(i,true);tm=this.getWheelTransformWS(i);p=tm.getOrigin();q=tm.getRotation();this.wheelMeshes[i].position.set(p.x(),p.y(),p.z());this.wheelMeshes[i].quaternion.set(q.x(),q.y(),q.z(),q.w())}tm=this.getChassisWorldTransform();p=tm.getOrigin();q=tm.getRotation();if(this.classisBody.mesh){this.classisBody.mesh.position.set(p.x(),p.y(),p.z());this.classisBody.mesh.quaternion.set(q.x(),q.y(),q.z(),q.w())}}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Vehicle},function(module,exports){"use strict";exports.KEY_LOCALSTORAGE_PLAYER_ID="KEY_LOCALSTORAGE_PLAYER_ID";exports.KEY_LOCALSTORAGE_PLAYER_NAME="KEY_LOCALSTORAGE_PLAYER_NAME";exports.EVENT_CREATE_PLAYER="EVENT_CREATE_PLAYER";exports.EVENT_RENAME_PLAYER="EVENT_RENAME_PLAYER";exports.EVENT_CREATE_ROOM="EVENT_CREATE_ROOM";exports.EVENT_ROOM_LIST="EVENT_ROOM_LIST";exports.EVENT_ENTER_HALL="EVENT_ENTER_HALL";exports.EVENT_JOIN_ROOM="EVENT_JOIN_ROOM";exports.EVENT_LEAVE_ROOM="EVENT_LEAVE_ROOM";exports.EVENT_ADD_PLAYER="EVENT_ADD_PLAYER";exports.EVENT_REMOVE_PLAYER="EVENT_REMOVE_PLAYER";exports.EVENT_PLAYER_LIST="EVENT_PLAYER_LIST";exports.EVENT_ASSIGN_ADMINISTRATOR="EVENT_ASSIGN_ADMINISTRATOR";exports.EVENT_REVOKE_ADMINISTRATOR="EVENT_REVOKE_ADMINISTRATOR";exports.EVENT_ENTER_GAME="EVENT_ENTER_GAME";exports.EVENT_LEAVE_GAME="EVENT_LEAVE_GAME";exports.EVENT_COUNTDOWN="EVENT_COUNTDOWN";exports.EVENT_START_GAME="EVENT_START_GAME";exports.EVENT_FINISH_GAME="EVENT_FINISH_GAME";exports.EVENT_GAME_OVER="EVENT_GAME_OVER";exports.EVENT_PLAYER_ACTION="EVENT_PLAYER_ACTION"},function(module,exports,__webpack_require__){"use strict";const Const_1=__webpack_require__(16);class Player{constructor(socket){this.id=this._getIdFromStorage();this.name=this._getnameFromStorage();this.socket=socket;this.socket.emit(Const_1.EVENT_CREATE_PLAYER,JSON.stringify({id:this.id,name:this.name}))}setName(name){this.name=name;localStorage.setItem(Const_1.KEY_LOCALSTORAGE_PLAYER_NAME,name);this.socket.emit(Const_1.EVENT_RENAME_PLAYER,JSON.stringify({name:this.name}))}enterGame(){this.socket.emit(Const_1.EVENT_ENTER_GAME)}createRoom(){if(!this.id){throw"the player has no id."}if(!this.name){throw"the player has no name."}this.socket.emit(Const_1.EVENT_CREATE_ROOM)}joinRoom(room){if(!this.id){throw"the player has no id."}if(!this.name){throw"the player has no name."}this.socket.emit(Const_1.EVENT_JOIN_ROOM,{name:room})}leavenRoom(){this.socket.emit(Const_1.EVENT_LEAVE_ROOM)}_getIdFromStorage(){let id=localStorage.getItem(Const_1.KEY_LOCALSTORAGE_PLAYER_ID);if(!id){id=((new Date).getTime()+Math.random()).toString(36)}localStorage.setItem(Const_1.KEY_LOCALSTORAGE_PLAYER_ID,id);return id}_getnameFromStorage(){let name=localStorage.getItem(Const_1.KEY_LOCALSTORAGE_PLAYER_NAME);return name}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Player},function(module,exports,__webpack_require__){"use strict";const Const_1=__webpack_require__(16);class Hall{constructor(socket){this.socket=socket;this.container=document.getElementById("hall");this.containerRoomList=document.getElementById("room-list");this.btnCreateRoom=document.getElementById("btn-create-room");this.socket.on(Const_1.EVENT_ROOM_LIST,data=>{let list=JSON.parse(data);this.showRooms(list)});this.btnCreateRoom.addEventListener("click",evt=>{this.createRoom()})}enter(){this.socket.emit(Const_1.EVENT_ENTER_HALL);this.show()}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}enterRoom(room){this.socket.emit(Const_1.EVENT_JOIN_ROOM,JSON.stringify({room:room}))}createRoom(){this.socket.emit(Const_1.EVENT_CREATE_ROOM)}showRooms(rooms){let str="";for(let i=0,len=rooms.length;i<len;i++){str+=`
\t                <tr>
\t                    <td>${rooms[i]}</td>
\t                    <td>
\t                        <button type="button" class="btn btn-default" data-room="${rooms[i]}" >加入</button>
\t                    </td>
\t                </tr>
\t            `}this.containerRoomList.innerHTML=str;Array.from(this.containerRoomList.querySelectorAll("button")).forEach(element=>{element.addEventListener("click",evt=>{this.enterRoom(element.dataset["room"])})})}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Hall},function(module,exports,__webpack_require__){"use strict";const Const_1=__webpack_require__(16);class Room{constructor(socket){this.socket=socket;this.container=document.getElementById("room");this.containerRoomName=this.container.querySelector("h2");this.containerPlayerList=document.getElementById("player-list");this.btnLeaveRoom=document.getElementById("btn-leave-room");this.btnStartGame=document.getElementById("btn-start-game");this.btnLeaveRoom.addEventListener("click",evt=>{this.socket.emit(Const_1.EVENT_LEAVE_ROOM,JSON.stringify({room:this.name}))});this.btnStartGame.addEventListener("click",evt=>{this.socket.emit(Const_1.EVENT_ENTER_GAME)});this.socket.on(Const_1.EVENT_PLAYER_LIST,data=>{data=JSON.parse(data);this._showPlayers(data)});this.socket.on(Const_1.EVENT_ASSIGN_ADMINISTRATOR,data=>{this.btnStartGame.className=this.btnStartGame.className.replace(/ *hidden/gi,"")});this.socket.on(Const_1.EVENT_REVOKE_ADMINISTRATOR,data=>{this.btnStartGame.className=this.btnStartGame.className+" hidden"})}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}setName(name){this.name=name;this.containerRoomName.innerHTML=this.name}_showPlayers(players=[]){let str="";for(let i=0,len=players.length;i<len;i++){str+=`
\t                <tr>
\t                    <td>${players[i]["name"]}</td>
\t                </tr>
\t            `}this.containerPlayerList.innerHTML=str}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=Room},function(module,exports){}]);